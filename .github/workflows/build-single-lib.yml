name: Build prebuilds for single library

on:
  workflow_dispatch:
    inputs:
      lib_name:
        description: "Library name"
        required: true
      lib_ref:
        description: "Library ref (commit or tag)"
        required: true

jobs:
  linux_prebuild:
    name: linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: yarn

      - uses: actions/cache@v3
        with:
          path: libs
          key: linux-${{ github.event.inputs.lib_name }}-${{ github.event.inputs.lib_ref }}-${{ hashFiles('package.json') }}-${{ hashFiles('yarn.lock') }}

      - run: yarn install --frozen-lockfile

      - run: yarn prebuild-lib
        env:
          LIB_SOURCE: ${{ github.event.inputs.lib_name }}
          LIB_REF: ${{ github.event.inputs.lib_ref }}

  windows_prebuild:
    name: windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: yarn

      - uses: actions/cache@v3
        with:
          path: libs
          key: windows-${{ github.event.inputs.lib_name }}-${{ github.event.inputs.lib_ref }}-${{ hashFiles('package.json') }}-${{ hashFiles('yarn.lock') }}

      - run: yarn install --frozen-lockfile

      - run: yarn prebuild-lib
        env:
          LIB_SOURCE: ${{ github.event.inputs.lib_name }}
          LIB_REF: ${{ github.event.inputs.lib_ref }}

  macos_prebuild:
    name: macos
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: yarn

      - uses: actions/cache@v3
        with:
          path: libs
          key: macos-${{ github.event.inputs.lib_name }}-${{ github.event.inputs.lib_ref }}-${{ hashFiles('package.json') }}-${{ hashFiles('yarn.lock') }}

      - run: yarn install --frozen-lockfile

      - run: yarn prebuild-lib
        env:
          LIB_SOURCE: ${{ github.event.inputs.lib_name }}
          LIB_REF: ${{ github.event.inputs.lib_ref }}

  publish:
    name: publish
    runs-on: ubuntu-latest
    needs:
      - linux_prebuild
      - windows_prebuild
      - macos_prebuild
    steps:
      - run: sleep 10

      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: yarn

      - uses: actions/cache@v3
        with:
          path: libs
          key: linux-${{ github.event.inputs.lib_name }}-${{ github.event.inputs.lib_ref }}-${{ hashFiles('package.json') }}-${{ hashFiles('yarn.lock') }}

      - uses: actions/cache@v3
        with:
          path: libs
          key: windows-${{ github.event.inputs.lib_name }}-${{ github.event.inputs.lib_ref }}-${{ hashFiles('package.json') }}-${{ hashFiles('yarn.lock') }}

      - uses: actions/cache@v3
        with:
          path: libs
          key: macos-${{ github.event.inputs.lib_name }}-${{ github.event.inputs.lib_ref }}-${{ hashFiles('package.json') }}-${{ hashFiles('yarn.lock') }}

      - run: yarn install --frozen-lockfile

      - run: yarn publish-lib
        env:
          LIB_SOURCE: ${{ github.event.inputs.lib_name }}
          LIB_REF: ${{ github.event.inputs.lib_ref }}

  clear_cache:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - uses: actions/checkout@v3

      - name: Clear cache
        uses: actions/github-script@v6
        env:
          CACHE_KEY: ${{ github.event.inputs.lib_name }}-${{ github.event.inputs.lib_ref }}-${{ hashFiles('package.json') }}-${{ hashFiles('yarn.lock') }}
        with:
          script: |
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            const search = `-${process.env.CACHE_KEY}`;
            for (const cache of caches.data.actions_caches) {
              if (cache.key.endsWith(search)) {
                github.rest.actions.deleteActionsCacheById({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  cache_id: cache.id,
                });
              }
            }
            console.log("Clear completed");
